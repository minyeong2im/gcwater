import streamlit as st

# --------------------------
# 기존 코드 그대로 가져오기
# --------------------------
이용요금표 = {
    "상수도": {
        "가정용":[
            {"구간":20, "단가":420},
            {"구간":30, "단가":653},
            {"구간":40, "단가":813},
            {"구간":float("inf"), "단가": 1072},
        ],
        "일반용":[
            {"구간":50, "단가":727},
            {"구간":100,"단가":960},
            {"구간":300,"단가":1096},
            {"구간":1000,"단가":1268},
            {"구간":float("inf"),"단가":1465}
        ],
        "대중탕용":[
            {"구간":1000,"단가":838},
            {"구간":1500,"단가":997},
            {"구간":2000,"단가":1183},
            {"구간":float("inf"),"단가":555}
        ],
        "전용공업용":[
            {"구간":200,"단가":321},
            {"구간":float("inf"),"단가":555},
        ],
        "산업용":[
            {"구간":200,"단가":444},
            {"구간":float("inf"),"단가":678}
        ],
        "겸업용":[
            {"구간":15,"단가":420}
        ],
    },
    "하수도":{
        "가정용":[
            {"구간":20,"단가":264},
            {"구간":30,"단가":678},
            {"구간":40,"단가":810},
            {"구간":float("inf"),"단가":955}
        ],
        "일반용":[
            {"구간":50,"단가":352},
            {"구간":100,"단가":1015},
            {"구간":300,"단가":1074},
            {"구간":1000,"단가":1133},
            {"구간":float("inf"),"단가":1205}
        ],
        "대중탕용":[
            {"구간":1000,"단가":692},
            {"구간":1500,"단가":1308},
            {"구간":2000,"단가":1471},
            {"구간":float("inf"),"단가":1559}
        ],
        "전용공업용":[
            {"구간":200,"단가":279},
            {"구간":float("inf"),"단가":529},
        ],
        "산업용":[
            {"구간":200,"단가":279},
            {"구간":float("inf"),"단가":529},
        ],
        "겸업용":[
            {"구간":15,"단가":420},
        ]
    }
}

기본요금표 = {
    13:1330,
    20:3700,
    25:5950,
    40:17880,
    50:27410,
    75:66550,
    100:113330,
    150:247010,
    200:309000,
    250:460280,
    300:572280,
}

물이용부담금_단가 = 170

def 기본요금(구경: int)->int:
    return 기본요금표.get(구경, 0)

def 이용요금계산(요율표_리스트: list, 사용량: int) -> int:
    요금 = 0
    이전 = 0
    남음 = 사용량
    for 단계 in 요율표_리스트:
        한도 = 단계["구간"]
        단가 = 단계["단가"]
        사용 = min(남음, 한도 - 이전)
        if 사용 > 0:
            요금 += 사용 * 단가
            남음 -= 사용
            이전 = 한도
        if 남음 <= 0:
            break
    return 요금

def 조정된_요율표(원본_리스트:list, 주기: str) -> list:
    multiplier = 2 if 주기 == "격월" else 1
    변환된 = []
    for 단계 in 원본_리스트:
        구간 = 단계["구간"]
        단가 = 단계["단가"]
        변환된.append({
            "구간":float("inf") if 구간 == float("inf") else 구간 * multiplier,
            "단가":단가
        })
    return 변환된

def 상수도요금(업종:str, 사용량: int, 구경: int, 주기: str="매월") -> dict:
    raw = 이용요금표["상수도"].get(업종)
    if raw is None:
        raise ValueError(f"상수도 업종 '{업종}' 미등록")
    multiplier = 2 if 주기 == "격월" else 1
    table = 조정된_요율표(raw, 주기)
    이용 = 이용요금계산(table, 사용량)
    기본 = 기본요금(구경) * multiplier
    합계 = 기본 + 이용
    return {"기본요금": 기본, "이용요금": 이용, "총요금": 합계}

def 하수도요금(업종: str, 사용량: int, 주기: str="매월") -> dict:
    raw = 이용요금표["하수도"].get(업종)
    if raw is None:
        raise ValueError(f"하수도 업종 '{업종}' 미등록")
    table = 조정된_요율표(raw, 주기)  
    이용 = 이용요금계산(table, 사용량)
    return {"기본요금": 0, "이용요금": 이용, "총요금": 이용}

def 물이용부담금요금(사용량:int) -> dict:
    금액 = 사용량 * 물이용부담금_단가
    return {"단가": 물이용부담금_단가, "총요금": 금액}

def 총요금계산(업종:str, 사용량: int, 구경: int, 하수도여부: bool=True, 주기: str="매월") -> dict:
    상수 = 상수도요금(업종, 사용량, 구경, 주기)
    하수 = 하수도요금(업종, 사용량, 주기) if 하수도여부 else {"기본요금":0,"이용요금":0,"총요금":0}
    부담 = 물이용부담금요금(사용량)
    총 = 상수["총요금"] + 하수["총요금"] + 부담["총요금"]
    return {"상수도": 상수, "하수도": 하수, "물이용부담금": 부담, "총요금": 총}

# --------------------------
# Streamlit UI
# --------------------------
st.title("💧 수도요금 계산기")

업종 = st.selectbox("업종 선택", list(이용요금표["상수도"].keys()))
사용량 = st.number_input("사용량(톤)", min_value=0, step=1)
구경 = st.selectbox("계량기 구경(mm)", list(기본요금표.keys()))
하수도여부 = st.checkbox("하수도 부과 여부", value=True)
주기 = st.radio("검침 주기", ["매월", "격월"])

if st.button("요금 계산하기"):
    결과 = 총요금계산(업종, 사용량, 구경, 하수도여부, 주기)

    st.subheader("📊 계산 결과")
    col1, col2, col3, col4 = st.columns(4)
    col1.metric("상수도 총요금", f"{결과['상수도']['총요금']:,} 원")
    col2.metric("하수도 총요금", f"{결과['하수도']['총요금']:,} 원")
    col3.metric("부담금", f"{결과['물이용부담금']['총요금']:,} 원")
    col4.metric("총 합계", f"{결과['총요금']:,} 원")

    with st.expander("상세 내역 보기"):
        st.write(f"**상수도 기본요금**: {결과['상수도']['기본요금']:,} 원")
        st.write(f"**상수도 이용요금**: {결과['상수도']['이용요금']:,} 원")
        st.write(f"**하수도 이용요금**: {결과['하수도']['이용요금']:,} 원")
        st.write(f"**물이용부담금 단가**: {결과['물이용부담금']['단가']} 원/톤")